{"version":3,"file":"static/js/749.de4f9ea5.chunk.js","mappings":"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","sources":["components/loader/Loader.js","webpack://react-homework-template/./src/page/movieDetails/MovieDetails.module.css?ea66","page/movieDetails/MovieDetails.js","serviсe/Api.js"],"sourcesContent":["\nimport { Circles } from  'react-loader-spinner'\nconst Loader = () => {\n    return(\n         <Circles\n  height=\"200\"\n  width=\"200\"\n  color=\"#4fa94d\"\n  ariaLabel=\"circles-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n/> \n    )\n}\nexport default Loader\n","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieDetails_backLink__7eDBu\",\"detailsList\":\"MovieDetails_detailsList__mipya\",\"detailsItems\":\"MovieDetails_detailsItems__7UesL\"};","import { useEffect, useState } from \"react\";\nimport { useParams, useLocation, Outlet, NavLink } from \"react-router-dom\";\nimport { fetchMovieDetails } from '../../serviсe/Api';\nimport { BiChevronsLeft } from \"react-icons/bi\"\nimport { Suspense } from \"react\";\nimport css from './MovieDetails.module.css'\nimport Loader from \"components/loader/Loader\";\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const [error, setError] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n  const backLinkHref = location.state?.from ;\n  const defaultImg = 'https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png';\n\n  const getMovieById = async (id) => {\n    try {\n      const data = await fetchMovieDetails(id);\n      return data;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setIsLoading(true);\n      setError(false); \n      const movieData = await getMovieById(id);\n      setMovie(movieData);\n      setIsLoading(false); \n    };\n    fetchMovie();\n  }, [id]);\n  if (isLoading) {\n    return <Loader />; \n  }\n  if (error) {\n    return <p>Error occurred while fetching movie details.</p>; \n  }\n  return (\n    <main>\n       <NavLink className={css.backLink} to={backLinkHref}>\n        <BiChevronsLeft/>Return to the previous page</NavLink>\n     \n      <h1>{movie.title}</h1>\n      \n      <img\n  src={\n    movie && movie.poster_path\n      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n      : defaultImg\n  }\n  width={500}\n  alt=\"poster\"\n/>\n      <p>Overview: {movie.overview}</p>\n      <p>Rating: {movie.vote_average}</p>\n      <ul className={css.detailsList}>\n        <li >\n          <NavLink className={css.detailsItems} \n          to={`/movies/${id}/cast`}\n          state={{from: backLinkHref}}\n          >Cast</NavLink>\n        </li>\n        <li>\n          <NavLink className={css.detailsItems}\n          to={`/movies/${id}/reviews`}\n          state={{from: backLinkHref}}\n          >Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}></Suspense>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n\n\n","import axios from \"axios\";\n\nconst ApiKey = 'ce6180729ed4220a4a998763c9b5bf5d';\nconst BaseUrl = 'https://api.themoviedb.org/3';\n\n export const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BaseUrl}/trending/movie/day`, {\n      params: {\n        api_key: ApiKey\n      }\n    });\n    const trendingMovies = response.data.results;\n    return trendingMovies;\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const fetchSearchMovies = async (query) => {\n  try {\n    const response = await axios.get(`${BaseUrl}/search/movie`, {\n      params: {\n        api_key: ApiKey,\n        query: query\n      }\n    });\n    \n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${ApiKey}`\n    );\n    const { poster_path, vote_average } = response.data;\n    return {\n      ...response.data,\n      poster_path,\n      vote_average,\n    };\n  } catch (error) {\n    throw new Error(\"Error fetching movie details\");\n  }\n};\n\n\nexport const fetchCast = async (id) => {\n  try {\n    const response = await axios.get(\n      `${BaseUrl}/movie/${id}/credits?api_key=${ApiKey}`\n    );\n    const { cast } = response.data;\n    const updatedCast = cast.map((actor) => ({\n      ...actor,\n      profilePath: actor.profile_path\n        ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n        : null,\n    }));\n    return {\n      cast: updatedCast,\n    };\n  } catch (error) {\n    throw new Error(\"Error fetching movie details\");\n  }\n};\nexport const fetchReviews = async (movieId) => {\n  try {\n    const response = await axios.get(`${BaseUrl}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: ApiKey,\n      },\n    });\n\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    return [];\n  }\n};\n\n\n\n\n\n\n"],"names":["height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","id","useParams","useState","movie","setMovie","location","useLocation","error","setError","isLoading","setIsLoading","backLinkHref","state","from","getMovieById","fetchMovieDetails","data","useEffect","fetchMovie","movieData","Loader","className","css","to","title","src","poster_path","alt","overview","vote_average","Suspense","fallback","ApiKey","BaseUrl","fetchTrendingMovies","axios","params","api_key","response","trendingMovies","results","fetchSearchMovies","query","Error","fetchCast","cast","updatedCast","map","actor","profilePath","profile_path","fetchReviews","movieId","reviews"],"sourceRoot":""}